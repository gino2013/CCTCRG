#!/bin/bash

# Claude Code Quick Initialization Tool
# Allows users to quickly enable Claude Code optimization in any project

set -e

# Color definitions
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_success() { printf "${GREEN}✅ $1${NC}\n"; }
print_info() { printf "${BLUE}ℹ️  $1${NC}\n"; }
print_warning() { printf "${YELLOW}⚠️  $1${NC}\n"; }

# Check if global configuration exists
check_global_config() {
    if [[ -d "$HOME/.claude-code-guide" ]]; then
        return 0
    else
        return 1
    fi
}

# Quick initialization of current project
quick_init() {
    local project_dir=$(pwd)
    local project_name=$(basename "$project_dir")
    
    print_info "Quick initialization Claude Code guide to: $project_name"
    
    # Check if global configuration exists
    if check_global_config; then
        print_info "Using global configuration..."
        local config_dir="$HOME/.claude-code-guide"
        
        # Copy core files
        cp "$config_dir/ClaudeCodeOptimizationGuide.md" "$project_dir/" 2>/dev/null || print_warning "Cannot find optimization guide"
        cp "$config_dir/PromptTemplates.md" "$project_dir/" 2>/dev/null || print_warning "Cannot find template library"
        cp "$config_dir/QuickStartGuide.md" "$project_dir/" 2>/dev/null || print_warning "Cannot find quick guide"
        
        # Generate project-specific CLAUDE.md
        cat > "$project_dir/CLAUDE.md" << EOF
# Claude Code 專案記憶文件

## 📋 專案基本信息
- **專案名稱**: $project_name
- **技術棧**: [請填入你的技術棧]
- **開發指令**: [請填入開發指令]

## 🎯 Claude Code 互動原則
參考專案中的 ClaudeCodeOptimizationGuide.md 和 CLAUDE.md，請遵循 token 節省原則。

## 📝 專案特定說明
[在這裡添加專案特定的重要信息]

---
> 記得編輯這個文件，填入你的專案特定信息！
EOF
        
        print_success "Initialization complete!"
        print_info "Please edit CLAUDE.md to fill in project-specific information"
        
    else
        print_warning "Cannot find global configuration, downloading..."
        # If no global configuration, provide simplified version
        create_minimal_setup "$project_dir" "$project_name"
    fi
}

# Create minimal setup
create_minimal_setup() {
    local project_dir=$1
    local project_name=$2
    
    # Create basic CLAUDE.md
    cat > "$project_dir/CLAUDE.md" << 'EOF'
# Claude Code 專案記憶文件

## 📋 專案基本信息
- **專案名稱**: [請填入專案名稱]
- **技術棧**: [請填入技術棧]
- **開發指令**: [請填入開發指令]

## 🎯 Claude Code 互動原則
每次與 Claude Code 互動時請包含：
```
參考專案中的 CLAUDE.md，請遵循以下原則：
- 只輸出代碼，不需要解釋
- 遵循專案代碼風格
- 包含適當的錯誤處理
```

## 💡 常用模板

### 快速開發模板
```
基於 CLAUDE.md 設定，創建 [功能名稱]：
- 功能: [核心功能]
- 技術: [使用技術]
- 輸出: 完整代碼文件
```

### Bug 修復模板
```
根據 CLAUDE.md 規範，修復 [問題描述]：
- 現象: [錯誤表現]
- 期望: [正確行為] 
- 輸出: 修復後的代碼
```

---
> 這是簡化版配置，建議執行完整安裝獲得更多功能
EOF

    # Create simple usage guide
    cat > "$project_dir/CLAUDE_USAGE.md" << 'EOF'
# Claude Code 快速使用指南

## 🚀 立即使用

每次與 Claude Code 互動時，請加入這段話：
```
參考專案中的 CLAUDE.md，請遵循 token 節省原則。
```

## 📝 常用場景

### 開發新功能
```
根據 CLAUDE.md 設定，創建 [功能名稱]：
- 功能: [具體功能描述]
- 技術: [使用的技術]
- 輸出: 完整可執行代碼
```

### 修復問題
```
基於 CLAUDE.md 規範，修復 [問題描述]：
- 現象: [具體錯誤]
- 期望: [正確行為]
- 輸出: 修復後代碼
```

## 💡 進階使用

建議執行完整安裝以獲得：
- 完整的優化指南
- 豐富的模板庫
- 自動化工具

安裝指令：
```bash
curl -sSL [your-install-url] | bash
```
EOF

    print_success "Basic configuration created"
    print_info "See CLAUDE_USAGE.md for usage instructions"
}

# Show status
show_status() {
    echo
    print_info "Claude Code guide status check"
    echo
    
    # Check global configuration
    if check_global_config; then
        print_success "Global configuration: Installed (~/.claude-code-guide/)"
    else
        print_warning "Global configuration: Not installed"
    fi
    
    # Check current project
    if [[ -f "./CLAUDE.md" ]]; then
        print_success "Current project: Configured"
    else
        print_warning "Current project: Not configured"
    fi
    
    # Check related files
    local files=("ClaudeCodeOptimizationGuide.md" "PromptTemplates.md" "QuickStartGuide.md")
    for file in "${files[@]}"; do
        if [[ -f "./$file" ]]; then
            print_success "File: $file"
        else
            print_warning "File: $file (missing)"
        fi
    done
    
    echo
}

# Main logic
case "${1:-}" in
    "status"|"-s"|"--status")
        show_status
        ;;
    "help"|"-h"|"--help")
        echo "Claude Code 快速初始化工具"
        echo
        echo "用法:"
        echo "  claude-init          # Quick initialization of current project"
        echo "  claude-init status   # 檢查安裝狀態"
        echo "  claude-init help     # 顯示幫助信息"
        echo
        ;;
    *)
        quick_init
        ;;
esac